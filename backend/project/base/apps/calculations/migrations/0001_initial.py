# Generated by Django 2.0.3 on 2018-11-28 07:14

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('team', '0002_team_user'),
        ('trackers', '0006_auto_20181128_0714'),
    ]

    operations = [
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('wind_resistance', models.FloatField(verbose_name=' resistance constant')),
                ('enegry_used_per_kilo_walking_flat', models.FloatField(help_text='J / (kg * m) -> how much energy is used per kilo when walking on a flat surface', verbose_name='enegry used per kilo')),
                ('window_size_start', models.IntegerField(verbose_name='window size start')),
                ('window_size_end', models.IntegerField(verbose_name='window size end')),
                ('window_size_num', models.IntegerField(verbose_name='window size num')),
                ('window_size_base', models.IntegerField(verbose_name='window size base')),
                ('perc', models.FloatField(help_text='Which percentile should we take', verbose_name='percentile')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('time', models.DateTimeField(verbose_name='time')),
                ('velocity', models.FloatField(verbose_name='velocity')),
                ('acceleration', models.FloatField(verbose_name='acceleration')),
                ('em', models.FloatField(verbose_name='x (m)')),
                ('es', models.FloatField(verbose_name='y (m)')),
                ('watt_kg', models.FloatField(verbose_name='latitude (deg)')),
                ('load', models.IntegerField(verbose_name='player load (abs cumsum / 9.81)')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculated_data', to='team.Member', verbose_name='member')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculated_data', to='trackers.Session', verbose_name='session')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PowerCategroy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('category', models.IntegerField(choices=[(10, 'Low Power \n < 10 W/kg'), (20, 'Intermediate Power\n 10 < x < 20 W/kg'), (35, 'High Power\n 20 < x < 35 W/kg'), (55, 'Enormous Power\n 35 < x < 55 W/kg'), (100, 'Maximum Power\n  55 W/kg <')], verbose_name='category')),
                ('total_energy_kj_per_kg', models.FloatField(verbose_name='energy per category (kj/kg)')),
                ('total_time_sec', models.FloatField(verbose_name='seconds per category')),
                ('anareobic_reserve', models.FloatField(verbose_name='anareobic reserve')),
                ('critical_power', models.FloatField(verbose_name='critical power')),
                ('total_player_load', models.FloatField(verbose_name='total player load')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Member', verbose_name='member')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculated_power_category_data', to='trackers.Session', verbose_name='session')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
